/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OracleRegistry,
  OracleRegistryInterface,
} from "../OracleRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "oracleType",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oracleAddr",
        type: "address",
      },
    ],
    name: "OracleRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_oracleType",
        type: "uint16",
      },
    ],
    name: "getOracleAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "oracleRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_oracleType",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_oracleAddr",
        type: "address",
      },
    ],
    name: "setOracleAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6108b58061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632f7e87cd14610067578063715018a614610097578063722e7a54146100a15780638da5cb5b146100bd578063f2fde38b146100db578063f7abbbce146100f7575b600080fd5b610081600480360381019061007c9190610607565b610127565b60405161008e91906106f6565b60405180910390f35b61009f610169565b005b6100bb60048036038101906100b69190610643565b6101f1565b005b6100c5610344565b6040516100d291906106f6565b60405180910390f35b6100f560048036038101906100f091906105de565b61036d565b005b610111600480360381019061010c9190610607565b610465565b60405161011e91906106f6565b60405180910390f35b60016020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101716104e8565b73ffffffffffffffffffffffffffffffffffffffff1661018f610344565b73ffffffffffffffffffffffffffffffffffffffff16146101e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101dc90610768565b60405180910390fd5b6101ef60006104f0565b565b6101f96104e8565b73ffffffffffffffffffffffffffffffffffffffff16610217610344565b73ffffffffffffffffffffffffffffffffffffffff161461026d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026490610768565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008461ffff1661ffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f661ca0cdc1761848eba8cefca5789bb2f38c5ab4d952f40c04c32eb642eb67a083838360405161033793929190610711565b60405180910390a1505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103756104e8565b73ffffffffffffffffffffffffffffffffffffffff16610393610344565b73ffffffffffffffffffffffffffffffffffffffff16146103e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e090610768565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610459576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045090610748565b60405180910390fd5b610462816104f0565b50565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008361ffff1661ffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000813590506105c381610851565b92915050565b6000813590506105d881610868565b92915050565b6000602082840312156105f057600080fd5b60006105fe848285016105b4565b91505092915050565b6000806040838503121561061a57600080fd5b6000610628858286016105b4565b9250506020610639858286016105c9565b9150509250929050565b60008060006060848603121561065857600080fd5b6000610666868287016105b4565b9350506020610677868287016105c9565b9250506040610688868287016105b4565b9150509250925092565b61069b81610799565b82525050565b60006106ae602683610788565b91506106b9826107d9565b604082019050919050565b60006106d1602083610788565b91506106dc82610828565b602082019050919050565b6106f0816107ab565b82525050565b600060208201905061070b6000830184610692565b92915050565b60006060820190506107266000830186610692565b61073360208301856106e7565b6107406040830184610692565b949350505050565b60006020820190508181036000830152610761816106a1565b9050919050565b60006020820190508181036000830152610781816106c4565b9050919050565b600082825260208201905092915050565b60006107a4826107b9565b9050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61085a81610799565b811461086557600080fd5b50565b610871816107ab565b811461087c57600080fd5b5056fea2646970667358221220218ee399d76e246547b5bea472c1d28f5b0ae114a538da2bfb5e3ce0fe4db8db64736f6c63430008040033";

export class OracleRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OracleRegistry> {
    return super.deploy(overrides || {}) as Promise<OracleRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OracleRegistry {
    return super.attach(address) as OracleRegistry;
  }
  connect(signer: Signer): OracleRegistry__factory {
    return super.connect(signer) as OracleRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleRegistryInterface {
    return new utils.Interface(_abi) as OracleRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleRegistry {
    return new Contract(address, _abi, signerOrProvider) as OracleRegistry;
  }
}
