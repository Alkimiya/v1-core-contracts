/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IOracleRegistry,
  IOracleRegistryInterface,
} from "../IOracleRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "oracleType",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oracleAddr",
        type: "address",
      },
    ],
    name: "OracleRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_oracleType",
        type: "uint16",
      },
    ],
    name: "getOracleAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IOracleRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IOracleRegistryInterface {
    return new utils.Interface(_abi) as IOracleRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IOracleRegistry {
    return new Contract(address, _abi, signerOrProvider) as IOracleRegistry;
  }
}
